version: "3"

volumes:
  localstack-vol:

services:

  mlflow:
    build:
      context: mlflow_pr
    environment:
      AWS_REGION: eu-west-3
      AWS_DEFAULT_REGION: eu-west-3
      AWS_ACCEну а по логике еEY: adminadmin
      MLFLOW_S3_ENDPOINT_URL: http://minio:9000
    ports:
      - "5000:5000"
    command: mlflow server --host 0.0.0.0 --backend-store-uri postgresql://db:123456@postgres:5432/db --default-artifact-root s3://test-bucket/

  postgres:
    image: postgres:14.2
    environment:
      POSTGRES_DB: 'db'
      POSTGRES_USER: 'db'
      POSTGRES_PASSWORD: "123456"
    ports:
      - "5432:5432"

  ml_project:
    build: ml_project/
    command: "./project/start.sh"
    ports:
      - '1234:1234'
    depends_on:
      - postgres
      - mlflow
      - minio
    environment:
      MLFLOW_TRACKING_URI: 'http://mlflow_pr:5000'
      JUPYTER_ENABLE_LAB: "yes"
    links:
      - postgres
      - minio
      - mlflow

  minio:
    image: minio/minio:RELEASE.2022-03-26T06-49-28Z
    command: server /data --console-address ":9001"
    ports:
      - "9020:9000"
      - "9021:9001"
    environment:
      MINIO_ROOT_USER: admin
      MINIO_ROOT_PASSWORD: adminadmin
      MINIO_SITE_REGION: eu-west-3

  createbuckets:
    image: minio/mc
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
      echo sleep 30;
      sleep 30;
      /usr/bin/mc config host add myminio http://minio:9000 admin adminadmin;
      /usr/bin/mc mb myminio/test-bucket;
      exit 0;
      "

  data_handler:
    build: data_handler/
    command: "python main.py"
    ports:
      - "8000:8000"
    depends_on:
      - postgres
    restart: always

  dashboard:
    build: dashboard/
    command: "python index.py"
    ports:
      - "8050:8050"
    depends_on:
      - ml_project
    links:
      - minio